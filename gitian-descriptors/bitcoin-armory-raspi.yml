---
name: "bitcoin-armory-raspi"
enable_cache: true
suites:
- "trusty"
architectures:
- "amd64"
packages:
- "autoconf"
- "automake"
- "faketime"
- "libtool"
- "pkg-config"
reference_datetime: "2013-06-01 00:00:00"
remotes:
- "url": "https://github.com/etotheipi/BitcoinArmory.git"
  "dir": "BitcoinArmory"
files:
- "tools.tar.gz"
script: |
    HOSTS="arm-linux-gnueabihf"

    export TZ=UTC
    export BUILD_DIR=`pwd`

    export GZIP="-9n"
    export TAR_OPTIONS="--mtime="$REFERENCE_DATE\\\ $REFERENCE_TIME""

    WRAP_DIR=$HOME/wrapped
    FAKETIME_PROGS="date ar ranlib nm strip"
    mkdir -p ${WRAP_DIR}
    if test -n "$GBUILD_CACHE_ENABLED"; then
      export SOURCES_PATH=${GBUILD_COMMON_CACHE}
      export BASE_CACHE=${GBUILD_PACKAGE_CACHE}
      mkdir -p ${BASE_CACHE} ${SOURCES_PATH}
    fi

    # Create global faketime wrappers
    for prog in ${FAKETIME_PROGS}; do
      echo '#!/bin/bash' > ${WRAP_DIR}/${prog}
      echo "REAL=\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\`" >> ${WRAP_DIR}/${prog}
      echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}
      echo "export FAKETIME=\"${REFERENCE_DATETIME}\"" >> ${WRAP_DIR}/${prog}
      echo "\$REAL \$@" >> $WRAP_DIR/${prog}
      chmod +x ${WRAP_DIR}/${prog}
    done
    export PATH=${WRAP_DIR}:${PATH}

    tar -C ${BUILD_DIR} -xf ${BUILD_DIR}/tools.tar.gz
    export PATH="${BUILD_DIR}/tools/arm-bcm2708/gcc-linaro-arm-linux-gnueabihf-raspbian-x64/bin/:$PATH"
    export PKG_CONFIG=arm-linux-gnueabihf-pkg-config-real

    cd BitcoinArmory
    BASEPREFIX=`pwd`/depends    
    ORIGPATH="$PATH"
    for i in $HOSTS; do
      make ${MAKEOPTS} -C ${BASEPREFIX} HOST="${i}"
    done

    # Create pyrcc4 faketime wrapper
    echo '#!/bin/bash' > ${WRAP_DIR}/pyrcc4
    echo "REAL=${BASEPREFIX}/`echo '${HOSTS} | awk '{print $1;}''`/bin/pyrcc4" >> ${WRAP_DIR}/pyrcc4
    echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/pyrcc4
    echo "export FAKETIME=\"${REFERENCE_DATETIME}\"" >> ${WRAP_DIR}/pyrcc4
    echo "\$REAL \$@" >> $WRAP_DIR/pyrcc4
    chmod +x ${WRAP_DIR}/pyrcc4

    for i in $HOSTS; do
      export PATH=${BUILD_DIR}/tools/arm-bcm2708/gcc-linaro-arm-linux-gnueabihf-raspbian-x64/bin/:${BASEPREFIX}/${i}/bin:${BASEPREFIX}/${i}/native/bin:${ORIGPATH}

      version=`grep "^BTCARMORY_VERSION" armoryengine/ArmoryUtils.py | cut -d "(" -f2 | cut -d ")" -f1 | tr -d '[[:space:]]' | tr ',' '.'`
      instDir="armory_${version}_raspbian-armhf"
      mkdir $instDir
      ./autogen.sh
      ./configure --prefix=${BASEPREFIX}/${i} --bindir=/usr/bin --includedir=/usr/include --libdir=/usr/lib --datarootdir=/usr/share --host ${i} --enable-gitian PYTHON_INCLUDES="-I${BASEPREFIX}/${i}/include/python2.7 -I${BASEPREFIX}/${i}/include" PYTHON_LIBS="-L${BASEPREIX}/${i}/lib -lpython2.7"
      make ${MAKEOPTS} STATIC_LINK=1
      make install DESTDIR=${instDir}
      cd $instDir
      tar -zcf ${OUTDIR}/${instDir}.tar.gz usr
    done
